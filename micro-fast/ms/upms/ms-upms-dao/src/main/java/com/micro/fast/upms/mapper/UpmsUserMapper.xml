<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.micro.fast.upms.dao.UpmsUserMapper" >
  <resultMap id="BaseResultMap" type="com.micro.fast.upms.pojo.UpmsUser" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="salt" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="realname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="avatar" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="sex" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="locked" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="ctime" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="uptime" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="version" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, salt, realname, avatar, phone, email, sex, locked, ctime, 
    uptime, version
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from upms_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from upms_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.micro.fast.upms.pojo.UpmsUser" >
    insert into upms_user (id, username, password, 
      salt, realname, avatar, 
      phone, email, sex, 
      locked, ctime, uptime, 
      version)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, 
      #{locked,jdbcType=TINYINT}, #{ctime,jdbcType=BIGINT}, #{uptime,jdbcType=BIGINT}, 
      #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.micro.fast.upms.pojo.UpmsUser" >
    insert into upms_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="locked != null" >
        locked,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="uptime != null" >
        uptime,
      </if>
      <if test="version != null" >
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="locked != null" >
        #{locked,jdbcType=TINYINT},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=BIGINT},
      </if>
      <if test="uptime != null" >
        #{uptime,jdbcType=BIGINT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.micro.fast.upms.pojo.UpmsUser" >
    update upms_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="locked != null" >
        locked = #{locked,jdbcType=TINYINT},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=BIGINT},
      </if>
      <if test="uptime != null" >
        uptime = #{uptime,jdbcType=BIGINT},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.micro.fast.upms.pojo.UpmsUser" >
    update upms_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      locked = #{locked,jdbcType=TINYINT},
      ctime = #{ctime,jdbcType=BIGINT},
      uptime = #{uptime,jdbcType=BIGINT},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--非自定生成-->
  <select id="selectByUsername" resultType="com.micro.fast.upms.pojo.UpmsUser">
    SELECT
    <include refid="Base_Column_List"/>
    FROM upms_user
    WHERE username = #{username}
  </select>
  <select id="countUsername" resultType="java.lang.Integer">
    SELECT COUNT(username) FROM upms_user WHERE username = #{username}
  </select>
  <select id="countEmail" resultType="java.lang.Integer">
    SELECT COUNT(email) FROM upms_user WHERE email = #{email}
  </select>
  <select id="selectByCondition" resultType="com.micro.fast.upms.pojo.UpmsUser">
    SELECT  <include refid="Base_Column_List"/> FROM micro.upms_user
    <where>
      <if test="username != null">
        username like #{username}
      </if>
      <if test="realname != null">
        and realname like #{realname}
      </if>
      <if test="phone != null">
        and phone like #{phone}
      </if>
      <if test="email != null">
        and email like #{email}
      </if>
      <if test="sex != null">
        and sex = #{sex}
      </if>
    </where>
  </select>
  <select id="selectJoinWithOrgId" resultType="com.micro.fast.upms.pojo.UpmsUser">
    SELECT <include refid="Base_Column_List"/> FROM upms_user
    <where>
      <if test="orgid != null">
        and  id IN (SELECT user_id FROM upms_user_organization WHERE organization_id = #{orgid})
      </if>
      <if test="user.username != null">
        and  username like #{user.username}
      </if>
      <if test="user.realname != null">
        and realname like #{user.realname}
      </if>
      <if test="user.phone != null">
        and phone like #{user.phone}
      </if>
      <if test="user.email != null">
        and email like #{user.email}
      </if>
      <if test="user.sex != null">
        and sex = #{user.sex}
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKeys" parameterType="java.util.List">
    delete from upms_user
    where id IN
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
</mapper>