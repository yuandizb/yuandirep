<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.micro.fast</groupId>
    <artifactId>micro-fast</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>micro-fast</name>
    <description>micro-fast enterprise class solutions</description>

    <!--统一管理springboot依赖和插件的版本-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.9.RELEASE</version>
    </parent>
    <!--聚合各个子模块便于编译安装部署-->
    <modules>
        <module>boot-starter</module>
        <module>ms</module>
        <module>all-in-one</module>
    </modules>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <properties>
        <!--主要版本控制属性-->
        <micro.fast.version>0.0.1-SNAPSHOT</micro.fast.version>
        <springboot.version>1.5.9.RELEASE</springboot.version>
        <spring-cloud.version>Edgware.RELEASE</spring-cloud.version>
        <spring-cloud-task.version>1.2.2.RELEASE</spring-cloud-task.version>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!--/主要版本控制属性-->
        <gatling-plugin.version>2.2.4</gatling-plugin.version>
        <activiti.version>5.21.0</activiti.version>
        <gatling.version>2.3.0</gatling.version>
        <ratelimit.version>1.4.0.RELEASE</ratelimit.version>
        <docker.repository>registry.cn-hangzhou.aliyuncs.com/lishouyu/hub</docker.repository>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <lombok.plugin.version>1.16.6.1</lombok.plugin.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>
        <transport.version>5.6.0</transport.version>
        <lombok.version>1.16.6</lombok.version>
        <guava.version>20.0</guava.version>
        <commons-lang3.version>3.5</commons-lang3.version>
        <commons-collections.version>3.2.1</commons-collections.version>
        <druid.springboot.version>1.1.6</druid.springboot.version>
        <joda-time.version>2.3</joda-time.version>
        <hashids.version>1.0.1</hashids.version>
        <commons-net.version>3.1</commons-net.version>
        <commons-fileupload.version>1.2.2</commons-fileupload.version>
        <commons-io.version>2.0.1</commons-io.version>
        <pagehelper.version>4.1.0</pagehelper.version>
        <mybatis-paginator.version>1.2.17</mybatis-paginator.version>
        <jsqlparser.version>0.9.4</jsqlparser.version>
        <mybatis-spring-boot-starter.version>1.3.0</mybatis-spring-boot-starter.version>
        <mysql-connector-java.version>5.1.44</mysql-connector-java.version>
        <hibernate-validator.version>5.3.6.Final</hibernate-validator.version>
        <tomcat-embed-el.version>8.5.16</tomcat-embed-el.version>
        <springfox-swagger2.version>2.8.0</springfox-swagger2.version>
        <springfox-swagger-ui.version>2.8.0</springfox-swagger-ui.version>
        <mybatis-generator-core.version>1.3.5</mybatis-generator-core.version>
        <fastdfs-client-java.version>1.27-SNAPSHOT</fastdfs-client-java.version>
        <mybatis-generator-maven-plugin.version>1.3.2</mybatis-generator-maven-plugin.version>
        <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
        <maven.javadoc.plugin.version>2.10.2</maven.javadoc.plugin.version>
        <docker.maven.plugin.version>0.4.3</docker.maven.plugin.version>
        <wiremock.version>2.11.0</wiremock.version>
        <spring-boot-devtools.optional>true</spring-boot-devtools.optional>
        <spring-boot-admin.version>1.5.7</spring-boot-admin.version>
        <quartz.version>2.2.1</quartz.version>
        <shardbatis.version>2.0.0B</shardbatis.version>
        <net.sf.jsqlparser.jsqlparser.version>0.7.0</net.sf.jsqlparser.jsqlparser.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>deploy</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-devtools</artifactId>
                        <version>${springboot.version}</version>
                        <optional>false</optional>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-devtools</artifactId>
                        <version>${springboot.version}</version>
                        <optional>true</optional>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
    </profiles>
    <!--对依赖的版本进行统一管理-->
    <dependencyManagement>
        <dependencies>
            <!--统一spring依赖的版本-->
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>Brussels-SR6</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--springcloud版本的统一管理-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-task-dependencies</artifactId>
                <version>${spring-cloud-task.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--wiremock客户端-->
            <dependency>
                <groupId>com.github.tomakehurst</groupId>
                <artifactId>wiremock</artifactId>
                <version>${wiremock.version}</version>
            </dependency>
            <dependency>
                <groupId>com.marcosbarbero.cloud</groupId>
                <artifactId>spring-cloud-zuul-ratelimit</artifactId>
                <version>${ratelimit.version}</version>
            </dependency>
            <!--使用注解简化pojo代码-->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!--提供了丰富的工具类和数据结构-->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!--常用工具类-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!--集合工具类-->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <!--处理时间的依赖-->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <!-- id加密解密 -->
            <dependency>
                <groupId>org.hashids</groupId>
                <artifactId>hashids</artifactId>
                <version>${hashids.version}</version>
            </dependency>
            <!-- ftp client -->
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons-net.version}</version>
            </dependency>
            <!-- file upload协助 springmvc文件上传-->
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <!--elasticsearch客户端依赖-->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>transport</artifactId>
                <version>${transport.version}</version>
            </dependency>
            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot-starter.version}</version>
            </dependency>
            <!-- mybatis pagehelper -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.miemiedev</groupId>
                <artifactId>mybatis-paginator</artifactId>
                <version>${mybatis-paginator.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.jsqlparser</groupId>
                <artifactId>jsqlparser</artifactId>
                <version>${jsqlparser.version}</version>
            </dependency>
            <!--数据库连接-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!--数据库连接池相关依赖-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.springboot.version}</version>
            </dependency>
            <!--表单校验相关依赖-->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-el</artifactId>
                <version>${tomcat-embed-el.version}</version>
            </dependency>
            <!--引入swagger2文档依赖-->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-swagger-ui.version}</version>
            </dependency>
            <!--dao层生成-->
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis-generator-core.version}</version>
            </dependency>
            <!--fastdfs文件上传客户端-->
            <dependency>
                <groupId>org.csource</groupId>
                <artifactId>fastdfs-client-java</artifactId>
                <version>${fastdfs-client-java.version}</version>
            </dependency>
            <!--springboot-admin-->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz-jobs</artifactId>
                <version>${quartz.version}</version>
            </dependency>
            <!-- 性能测试 Gatling -->
            <dependency>
                <groupId>io.gatling.highcharts</groupId>
                <artifactId>gatling-charts-highcharts</artifactId>
                <version>${gatling.version}</version>
            </dependency>
            <!--分表依赖-->
            <dependency>
                <groupId>org.shardbatis</groupId>
                <artifactId>shardbatis</artifactId>
                <version>${shardbatis.version}</version>
            </dependency>
            <dependency>
                <groupId>net.sf.jsqlparser</groupId>
                <artifactId>jsqlparser</artifactId>
                <version>${net.sf.jsqlparser.jsqlparser.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <!--对插件的版本以及配置进行统一的控制-->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.projectlombok</groupId>
                    <artifactId>lombok-maven-plugin</artifactId>
                    <version>${lombok.plugin.version}</version>
                </plugin>
                <!--生成mybatis dao 层 sql mapper的插件-->
                <plugin>
                    <groupId>org.mybatis.generator</groupId>
                    <artifactId>mybatis-generator-maven-plugin</artifactId>
                    <version>${mybatis-generator-maven-plugin.version}</version>
                </plugin>
                <!--将lib打包插件-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>testCompile</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <source>${maven.compiler.source}</source>
                        <target>${maven.compiler.source}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <compilerArguments>
                            <extdirs>${project.basedir}/src/main/resources/lib</extdirs>
                        </compilerArguments>
                    </configuration>
                </plugin>
                <!--javadoc生成插件-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven.javadoc.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadoc</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <charset>UTF-8</charset>
                        <encoding>UTF-8</encoding>
                        <docencoding>UTF-8</docencoding>
                    </configuration>
                </plugin>
                <!--spring　cloud与docker整合插件-->
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.maven.plugin.version}</version>
                    <configuration>
                        <!--设置镜像的名字为镜像仓库地址-->
                        <imageName>${docker.repository}</imageName>
                        <!--设置镜像的tag为项目的maven构建的jar的名字和版本号-->
                        <imageTags>
                            <imageTag>${project.build.finalName}V${micro.fast.version}</imageTag>
                        </imageTags>
                        <!--存放Dockerfile的文件夹-->
                        <dockerDirectory>${project.basedir}</dockerDirectory>
                        <!--maven　settings中配置的服务的id-->
                        <serverId>docker-registry</serverId>
                        <!--docker仓库的地址-->
                        <registryUrl>registry.cn-hangzhou.aliyuncs.com</registryUrl>
                        <!--构建镜像所有的资源，这些资源将被复制到dockerFile的目录-->
                        <!--<resources>-->
                        <!--<resource>-->
                        <!--<targetPath>/</targetPath>-->
                        <!--<directory>${project.build.directory}</directory>-->
                        <!--<include>${project.build.finalName}.jar</include>-->
                        <!--</resource>-->
                        <!--</resources>-->
                    </configuration>
                </plugin>
                <!--gatling性能测试插件依赖,mvn gatling:execute-->
                <plugin>
                    <groupId>io.gatling</groupId>
                    <artifactId>gatling-maven-plugin</artifactId>
                    <version>${gatling-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
